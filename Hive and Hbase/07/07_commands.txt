a. Creation of tables in Hive:

$ hive
hive> 
CREATE TABLE Customer_info (
      Cust_ID INT,
      Cust_Name STRING,
      OrderID INT)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED AS TEXTFILE;

hive> 
CREATE TABLE order_info (
      OrderID INT,
      ItemID INT,
      Quantity INT)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED AS TEXTFILE;

hive> 
CREATE TABLE item_info (
      Item_ID INT,
      Item_Name STRING,
      ItemPrice DOUBLE)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED AS TEXTFILE;


b. Load table with data from local storage in Hive:

$ hive
LOAD DATA LOCAL INPATH 'customer_info.txt' OVERWRITE INTO TABLE Customer_info;
LOAD DATA LOCAL INPATH 'order_info.txt' OVERWRITE INTO TABLE order_info;
LOAD DATA LOCAL INPATH 'item_info.txt' OVERWRITE INTO TABLE item_info;


c. Perform Join tables with Hive:

$ hive

SELECT * FROM Customer_info
JOIN order_info ON Customer_info.OrderID = order_info.OrderID
JOIN item_info ON order_info.ItemID = item_info.Item_ID;


SELECT ci.*, oi.*, ii.*
FROM Customer_info ci
JOIN order_info oi ON ci.OrderID = oi.OrderID
JOIN item_info ii ON oi.ItemID = ii.Item_ID;


d. Create an index on Customer Information System in Hive:

$ hive
CREATE INDEX idx_customer_info ON TABLE Customer_info (Cust_ID) AS 'COMPACT' WITH DEFERRED REBUILD;
ALTER INDEX idx_customer_info ON Customer_info REBUILD;

SHOW INDEX ON Customer_info;

e. Find the total and average sales in Hive:

$ hive
hive> SELECT SUM(ItemPrice * Quantity) AS total_sales, AVG(ItemPrice * Quantity) AS avg_sales
      FROM order_info JOIN item_info ON order_info.ItemID = item_info.Item_ID;


SELECT SUM(ii.ItemPrice * oi.Quantity) AS total_sales, AVG(ii.ItemPrice * oi.Quantity) AS avg_sales
FROM order_info oi 
JOIN item_info ii ON oi.ItemID = ii.Item_ID;


f. Find Order details with maximum cost:

$ hive
hive> SELECT * FROM order_info
      WHERE (ItemPrice * Quantity) = (SELECT MAX(ItemPrice * Quantity) FROM order_info);



SELECT oi.*
FROM order_info oi
JOIN (
    SELECT MAX(ItemPrice * Quantity) AS max_cost FROM order_info
) max_cost_table
ON (oi.ItemPrice * oi.Quantity) = max_cost_table.max_cost;


g. Creating an external Hive table to connect to HBase for Customer Information System:

hbase 

create 'table07', 'cf'


$ hive
hive> CREATE EXTERNAL TABLE CustomerInfoHBase (
      Cust_ID INT,
      Cust_Name STRING,
      OrderID INT)
STORED BY 'org.apache.hadoop.hive.hbase.HBaseStorageHandler'
WITH SERDEPROPERTIES (
      "hbase.columns.mapping" = ":key,cf:cust_name,cf:order_id"
      )
TBLPROPERTIES ("hbase.table.name" = "table07");


INSERT INTO CustomerInfoHBase SELECT * FROM Customer_info;


SELECT * FROM CustomerInfoHBase;

h. Display records of Customer Information Table in Hbase.

$ hbase shell
scan 'table07'



customer_info.txt:

101,John Doe,1
102,Jane Smith,2
103,Alice Johnson,3
104,Bob Brown,4
105,Eve Williams,5


order_info.txt:

1,101,3
2,102,2
3,103,4
4,104,1
5,105,5


item_info.txt:

1,Product A,10.50
2,Product B,15.75
3,Product C,20.00
4,Product D,8.99
5,Product E,12.25
